install.packages("swirl")
install.packages("shiny")
swirl::install_course("Advanced R Programming")
swirl::install_course("The R Programming Environment")
library(swirl)
install_course_github("swirldev", "R_Programming_E")
library(dataMaid)
makeCodebook(iris)
install.packages("dataMaid")
library(dataMaid)
makeCodebook(iris)
install.packages("rmarkdown")
makeCodebook(iris)
makeCodebook(iris,reportTitle = "Codebook for iris1")
?makeCodebook
makeCodebook(iris,reportTitle = "Codebook for iris1")
makeCodebook(iris,reportTitle = "Codebook for iris1",file = "codebookiris")
install_from_swirl("Exploratory Data Analysis")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(ppm)
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,col = "blue")
abline(h=12)
hist(ppm,col = "green")
rug(ppm)
low
high
hist(ppm,col = "green",breaks = 100)
rug(ppm)
hist(ppm,col = "green")
abline(h=12,lwd=2)
abline(v = 12, lwd=2)
abline(v = median(ppm), lwd=2, col="magenta")
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg,col = "wheat", main = "Number of Counties in Each
| Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, data = pollution)
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution)
east <- subset(pollution,region=="east")
head(east)
hist(pm25,col = "green")
hist(east$pm25,col = "green")
west <- subset(pollution,region=="west")
hist(subset(pollution,region=="west")$pm25, col = "green")
plot(pollution)
with(pollution, plot(latitude, pm25))
abline(h=12,lwd =2)
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution,region=="west")
plot(west$latitude , west$pm25,main = "West")
plot(west$latitude , east$pm25,main = "East")
plot(west$latitude , west$pm25,main = "East")
plot(east$latitude, east$pm25, main = "East")
library(swirl)
swirl()
head(cars)
with(cars, plot(spped,dist))
with(cars, plot(speed,dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplotl(Life.Exp ~ Income | region,data=state,Layout=c(4,1))
xyplot(Life.Exp ~ Income | region,data=state,Layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy,data=mpg)
2
swirl()
head(airquality)
range(airquality$Ozone,na.rm )
range(airquality$Ozone,na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab = "Month",ylab ="Ozone (ppb)",coil.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.ax="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.ax="blue,col.lab="red)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.ax="blue,col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.ax="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.ax="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main = "Ozone and Wind in New York City")
plot( airquality$Wind)
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality)
may <- subset(airquality, Month==5)
plot(may,ozone)
with(may,plot(ozone))
may
points(may$Wind,may$Ozone,col="blue",pch=17)
may <- subset(airquality, Month~=5)
may <- subset(airquality, Mont!=5)
may <- subset(airquality, month.abb!=5)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind,notmay$Ozone)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",c(17,8))
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(lty=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone)
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone ,airquality$Solar.R )
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
bye
bye()
swirl()
library("swirl")
swirl()
data("mpg")
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer = TRUE)
setwd("C:/Users/hsanc/OneDrive - Dian Nuswantoro University/RStudio/Exploratory Data Analysis week 1 Project 1")
install.packages("data.table")
# Exploratory-Data-Analysis-Week-1-Project
Student Sanchez
This assignment uses data from the UC Irvine Machine Learning Repository, a popular repository for machine learning datasets. In particular, we will be using the âIndividual household electric power consumption Data Setâ which I have made available on the course web site:
library("data.table")
#Reads in data from file then subsets data for specified dates
powerDT <- data.table::fread(input = "C:\Users\hsanc\OneDrive - Dian Nuswantoro University\RStudio\Data\household_power_consumption.txt"
, na.strings="?"
)
library("data.table")
#Reads in data from file then subsets data for specified dates
powerDT <- data.table::fread(input = "C:/Users/hsanc/OneDrive - Dian Nuswantoro University/RStudio/Data/household_power_consumption.txt"
, na.strings="?"
)
# Prevents histogram from printing in scientific notation
powerDT[, Global_active_power := lapply(.SD, as.numeric), .SDcols = c("Global_active_power")]
# Change Date Column to Date Type
powerDT[, Date := lapply(.SD, as.Date, "%d/%m/%Y"), .SDcols = c("Date")]
# Filter Dates for 2007-02-01 and 2007-02-02
powerDT <- powerDT[(Date >= "2007-02-01") & (Date <= "2007-02-02")]
png("plot1.png", width=480, height=480)
## Plot 1
hist(powerDT[, Global_active_power], main="Global Active Power",
xlab="Global Active Power (kilowatts)", ylab="Frequency", col="Red")
dev.off()
